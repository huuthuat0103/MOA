//------ SASS Useful Mixins ---------------------------------------------

// by Ryan Burgess
// https://github.com/ryanburgess/SASS-Useful-Mixins

// ----------------------------------------------------------------------

  // Alignment

// ----------------------------------------------------------------------
@import "mixins/margin-auto";

// ----------------------------------------------------------------------

  // Animation

// ----------------------------------------------------------------------
@import "mixins/animate-link";
@import "mixins/animations";
@import "mixins/backface-visibility";
@import "mixins/keyframes";
@import "mixins/single-transform";
@import "mixins/transform";
@import "mixins/transitions";
@import "mixins/translate";

// ----------------------------------------------------------------------

  // Layout

// ----------------------------------------------------------------------
@import "mixins/background-cover";
@import "mixins/box-model";
@import "mixins/clearfix";
@import "mixins/flexbox";
@import "mixins/vertical-align";
@import "mixins/horizontal-align";
@import "mixins/center-align";

// ----------------------------------------------------------------------

  // Media Queries

// ----------------------------------------------------------------------
@import "mixins/breakpoint";
@import "mixins/min-breakpoint";
@import "mixins/retina";

// ----------------------------------------------------------------------

  // Values

// ----------------------------------------------------------------------
@import "mixins/rem";


// ----------------------------------------------------------------------

  // Others mixin

// ----------------------------------------------------------------------
@import "mixins/others";

@mixin mt-10 {
	margin-top: 1em;
}
@mixin mt-50 {
	margin-top: 5em;
}
@mixin mt-100 {
	margin-top: 10em;
}
@mixin mb-10 {
	margin-bottom: 1em;
}
@mixin mt-50 {
	margin-bottom: 5em;
}
@mixin mt-50 {
	margin-bottom: 10em;
}
@mixin text-black {
	color: #000;
}
@mixin text-white {
	color: #fff;
}
@mixin bg-white {
	background-color: #fff;
}
@mixin hover-bg {
	background: #000;
	opacity: .3;
	transition: .3s;
}
@mixin zoom-img {
	transform: scale(1.2);
}
@mixin zoom-img {
	transform: scale(1.2);
}
@mixin transition-3 {
	transition: .3s;
}
@mixin transition-5 {
	transition: .5s;
}
@mixin scroll {
  &::-webkit-scrollbar {
    width: 1px;
    height: 10px;
  }
  &::-webkit-scrollbar-thumb {
    border-radius: 8px;
    background: transparent;
    height: 5px;
  }
  &::-webkit-scrollbar-track {
    background: transparent;
    height: 5px;
    border-radius: 10px;
  }
}
@mixin scroll-firefox {
	  scrollbar-color: #f5f5f5 #e1e1e1;
  	scrollbar-width: thin;
}

/* font-size */

@mixin size-10 {
  font-size: 1em;
}
@mixin size-12 {
  font-size: 1.2em;
}
@mixin size-14 {
  font-size: 1.4em;
}
@mixin size-16 {
  font-size: 1.6em;
}
@mixin size-18 {
  font-size: 1.8em;
}
@mixin size-24 {
  font-size: 2.4em;
}
/* Responsive */

@mixin breakpoint($point) {
  @if $point==largedesktop {
    html.ie8 & {
      @content;
    }
    @media (min-width: $width-large-desktop) {
      @content;
    }
  } @else if $point==desktop {
    html.ie8 & {
      @content;
    }
    @media (min-width: $width-desktop) {
      @content;
    }
  } @else if $point==wrap {
    html.ie8 & {
      @content;
    }
    @media (min-width: $width-large-wrap) {
      @content;
    }
  } @else if $point==mediumwrap {
    html.ie8 & {
      @content;
    }
    @media (max-width: ($width-large-wrap - 1)) {
      @content;
    }
  } @else if $point==middesktop {
    html.ie8 & {
      @content;
    }
    @media (max-width: ($width-mid-desktop - 1)) {
      @content;
    }
  } @else if $point==mediumdesktop {
    html.ie8 & {
      @content;
    }
    @media (max-width: ($width-medium-desktop - 1)) {
      @content;
    }
  } @else if $point==tablet {
    @media (min-width: ($width-tablet)) and (max-width: ($width-desktop - 1)) {
      @content;
    }
  } @else if $point==mobile {
    @media (max-width: ($width-tablet - 1)) {
      @content;
    }
  } @else if $point==hiresmobile {
    @media (min-width: ($width-mobile)) and (max-width: ($width-tablet - 1)) {
      @content;
    }
  } @else if $point==lores {
    @media (max-width: ($width-desktop - 1)) {
      @content;
    }
  } @else if $point==hires {
    html.ie8 & {
      @content;
    }
    @media (min-width: ($width-tablet)) {
      @content;
    }
  } @else if $point==smallmobile {
    //screen < 480px
    @media (max-width: ($width-mobile - 1)) {
      @content;
    }
  }
}

/* @include breakpoint(lores) {

} */

$base-font-size:14;
@function px2em($pxsize) {
  @return ($pxsize/$base-font-size)+em;
}

@mixin hover-circle {
  &::before {
    position: absolute;
    top: 50%;
    left: 50%;
    z-index: 2;
    display: block;
    content: "";
    width: 0;
    height: 0;
    background: rgba(255, 255, 255, 0.2);
    border-radius: 100%;
    -webkit-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
    opacity: 0;
  }
  &:hover::before {
    -webkit-animation: circle 0.75s;
    animation: circle 0.75s;
  }
  &:focus::before {
    -webkit-animation: circle 0.75s;
    animation: circle 0.75s;
  }

  @-webkit-keyframes circle {
    0% {
      opacity: 1;
    }
    40% {
      opacity: 1;
    }
    100% {
      width: 200%;
      height: 200%;
      opacity: 0;
    }
  }
  @keyframes circle {
    0% {
      opacity: 1;
    }
    40% {
      opacity: 1;
    }
    100% {
      width: 200%;
      height: 200%;
      opacity: 0;
    }
  }
}